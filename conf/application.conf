# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="x<04CFWG=EWmTOy13EC^ErsbUT:tSUZ8B^4p5let9EcvV?dMm7G5LdxJylb`/f2["

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# global=app.Global

mongodb.default.db = "openreview-devdb"
mongodb.default.host = "localhost"

# MongoURI
# ~~~~~
# a MongoURI can also be used http://www.mongodb.org/display/DOCS/Connections
# mongodb.default.uri = "mongodb://127.0.0.1:27017,mongodb.org:1337/salat-test"

# WriteConcern
# ~~~~~
# Can be any of the following
#
# fsyncsafe - Exceptions are raised for network issues and server errors; Write operations wait for the server to flush data to disk.
# replicassafe - Exceptions are raised for network issues and server errors; waits for at least 2 servers for the write operation.
# safe - Exceptions are raised for network issues and server errors; waits on a server for the write operation.
# normal - Exceptions are raised for network issues but not server errors.
# mongodb.default.writeconcern = "safe"

storage=mongodb

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled

# ehcacheplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Logger configuration has been a big mess; see http://play.lighthouseapp.com/projects/82401/tickets/448-play-dist-ignores-loggerxml
# The most robust solution seems to be to configure everything in application-logger.xml files, and point to those
# explicitly via -Dlogger.file

# Journals (obsolete)
# --------
#journal.submission=/tmp/openreview/journal/submission.json
#journal.user=/tmp/openreview/journal/user.json
#journal.reply=/tmp/openreview/journal/reply.json

 
# Load toy data?
# --------------

devdata=false
iclrdata=false

server.hostname="localhost:9000"

session.secure=false
session.maxAge=200000
session.httpOnly=true


#####################################################################################
#
# SecureSocial 2 Settings
#
#####################################################################################


securesocial {
	#
	# Where to redirect the user if SecureSocial can't figure that out from
	# the request that led the use to the login page
	#
	onLoginGoTo=/library/todo

	#
	# Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
	#
	onLogoutGoTo=/

  ssl=false

  sessionTimeOut=20160
  
  userpass {      
      withUserNameSupport=false
      sendWelcomeEmail=true
      enableGravatarSupport=true
      tokenDuration=60
      tokenDeleteInterval=15
      minimumPasswordLength=8
  }

  google {
  	authorizationUrl="https://accounts.google.com/o/oauth2/auth"
  	accessTokenUrl="https://accounts.google.com/o/oauth2/token"
  	clientId="967463295956-bqnunbpg8hi04a5l811p073i464h3qt5.apps.googleusercontent.com"
  	clientSecret="NG2VIPQZiDGBMt4IUDpsXNWJ"
  	scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
  }


}

smtp {
    mock=true
    # host=localhost
    #port=25
    #ssl=true
    #user="mailer@openreview.net"
    #password=".AwUq17f1%5K"
    from="openreview.net <info@openreview.net>"
}

